# -*- coding: utf-8 -*-
"""ANN.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1QeS0_jBTSEaUyPl1ykRJtTP48q6qhCNk
"""

import numpy as np
import matplotlib.pyplot as plt
import pandas as pd

from google.colab import files
uploaded = files.upload()

ds = pd.read_csv('Churn_Modelling.csv')

ds

x = ds.iloc[:, 3:13].values
y = ds.iloc[:, 13].values

x

from sklearn.preprocessing import LabelEncoder, OneHotEncoder

LabelEncoder_x_2 = LabelEncoder()
x[:, 2] = LabelEncoder_x_2.fit_transform(x[:, 2])

x

y

from sklearn.compose import ColumnTransformer

ct = ColumnTransformer([('ohe', OneHotEncoder(), [1])], remainder = 'passthrough')

x = np.array(ct.fit_transform(x), dtype=str)

x= x[:, 1:]

print(x)

from sklearn.model_selection import train_test_split

x_train, x_test, y_train, y_test = train_test_split(x, y, test_size = 0.2, random_state = 0)

from sklearn.preprocessing import StandardScaler

sc = StandardScaler()

x_train = sc.fit_transform(x_train)
x_test = sc.transform(x_test)

x

x_train

pd.DataFrame(x_train)

from keras.models import Sequential
from keras.layers import Dense

classifier = Sequential()

classifier.add(Dense(units = 6, kernel_initializer='uniform', activation = 'relu', input_dim = 11))

classifier.add(Dense(units = 6, kernel_initializer='uniform', activation = 'relu'))

classifier.add(Dense(units = 1, kernel_initializer='uniform', activation = 'sigmoid'))

classifier.compile(optimizer = 'adam', loss = 'binary_crossentropy', metrics = ['accuracy'])

classifier.fit(x_train, y_train, batch_size = 10, epochs = 100)

y_pred = classifier.predict(x_test)
y_pred = (y_pred > 0.5)

print(y_pred)

from sklearn.metrics import confusion_matrix, accuracy_score
cm = confusion_matrix(y_test, y_pred)
print(cm)
accuracy_score(y_test, y_pred)